# frozen_string_literal: true

###
# @description: Represents a specification uploaded by a user in
#   its original state, after the preview, but in an active record
#   form.
###
class Specification < ApplicationRecord
  belongs_to :user
  belongs_to :domain
  before_create :assign_uri
  has_many :terms

  validates :name, presence: true
  validates :uri, presence: true, uniqueness: true

  include Identifiable

  ###
  # @description: ASsigns the uri before saving into the database. The uri must be unique
  #   and generated by the tool.
  ###
  def assign_uri
    self.uri = user.organization.name.downcase + "/" + domain.pref_label.downcase + "/" + unique_id
  end

  ###
  # @description: Mark this specification as spine for the related domain
  ###
  def spine!
    domain.update_column(:spine_id, id)
  end

  ###
  # @description: Returns the spine info about this specification serves as.
  # @return [TrueClass|FalseClass]
  ###
  def spine?
    domain.spine? && domain.spine_id == id
  end

  ###
  # @description: Include additional information about the specification in
  #   json responses. This overrides the ApplicationRecord as_json method.
  ###
  def as_json(options={})
    super options.merge(methods: %i[spine? domain])
  end
end
